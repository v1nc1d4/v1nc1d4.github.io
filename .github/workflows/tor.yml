name: Deploy GitHub Pages to Tor

on:
  workflow_dispatch: # Manual trigger
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  deploy-to-tor:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Download GitHub Pages Content
      run: |
        # Clone the GitHub Pages content
        git clone --depth 1 https://github.com/anuragmuxui/anuragmuxui.github.io.git site-content
        ls site-content

    - name: Deploy to Tor
      run: |
        # Install Docker Engine
        sudo apt-get update
        sudo apt-get install -y \
          ca-certificates \
          curl \
          gnupg \
          lsb-release

        # Set up the Docker repository
        sudo mkdir -p /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo \
          "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
          $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io

        # Create necessary directories
        mkdir -p hidden_service
        chmod 777 hidden_service

        # Create a Docker network for Tor
        docker network create tor_network || true

        # Run a Tor container to generate a hidden service
        docker run -d \
          --name tor \
          --network tor_network \
          -v $(pwd)/hidden_service:/var/lib/tor/hidden_service \
          dperson/torproxy \
          -f "HiddenServiceDir /var/lib/tor/hidden_service\nHiddenServicePort 80 127.0.0.1:8080"

        # Serve GitHub Pages content using an Nginx container
        docker run -d \
          --name static_server \
          --network tor_network \
          -v $(pwd)/site-content:/usr/share/nginx/html:ro \
          nginx:alpine

        # Wait for the .onion address to be generated
        echo "Waiting for the .onion address to be generated..."
        sleep 30

        # Display the generated .onion address
        if [ -f hidden_service/hostname ]; then
          echo "Tor hidden service address:"
          cat hidden_service/hostname
        else
          echo "Error: Hidden service address not found."
          exit 1
        fi


    - name: Save .onion Address
      uses: actions/upload-artifact@v3
      with:
        name: onion-address
        path: hidden_service/hostname
